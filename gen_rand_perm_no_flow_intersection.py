# -*- coding: utf-8 -*-
"""
Created on Mon Jun 13 12:12:08 2022

@author: ramch
"""


g= 33
a=8
p=4

src=[ele for ele in range(a*g*p)]
dest=[ele for ele in range(a*g*p)]

def rand_perm_half():
    src_dest_map={}
    thres=int(a*p/2)
    src=[ele for ele in range(thres)]
    dest=[ele for ele in range(thres)]
    import random
    random.shuffle(dest)
    for gg in range(g):
        for ss in src:
            src_dest_map[(gg*32)+ss]=(gg*32)+dest[ss]
            
    remaining_src=[]
    remaining_dest=[]  
    
    for gg in range(g):
        for ele in range(thres):
            remaining_src.append((ele+thres)+(gg*32))
            remaining_dest.append((ele+thres)+(gg*32))
    random.shuffle(remaining_dest)
    
    for i,ele in enumerate(remaining_src):
         src_dest_map[ele]=remaining_dest[i]
    return src_dest_map


# topo_map={}

src_dest_map={}

src_dest_min_path={}

def min_path(s,d,topo_map):
    src_router=int(s/4)
    dest_router=int(d/4)
    
    router_to_group={}
    for k,v in topo_map.items():
        router_to_group[int(k)]=set([int(int(ele)/8) for ele in v])
    
    if int(src_router/8) == int(dest_router/8):
        #in group routing
        return [src_router,dest_router]
    else:
        dest_group=int(dest_router/8)
        src_group=int(src_router/8)
        routers_in_src_grp=[ele for ele in range(src_group*8,src_group*8+8)]
        router_connection_to_dest_group=[ele for ele in routers_in_src_grp if dest_group in router_to_group[ele]]
        dest_grp_first_connection=[int(ele) for ele in topo_map[str(router_connection_to_dest_group[0])] if int(int(ele)/8) == dest_group]
        
        
        path=[]
        
        if router_connection_to_dest_group[0]==src_router:
            path.append(src_router)
        else:
            path.append(src_router)
            path.append(router_connection_to_dest_group[0])
        
        if  dest_grp_first_connection[0] == dest_router:
            path.append(dest_router)
        else:
            path.append(dest_grp_first_connection[0])
            path.append(dest_router)
            
        return path
            
        
def gen_shift():
    src_dest_map={}
    #every node inside a group have different group as destination
    for ss in src:
        src_dest_map[ss]=(ss+32)%1056
    return src_dest_map

def gen_shift_v2():
    src_dest_map={}
    #every node inside a group have different group as destination
    for ss in src:
        src_dest_map[ss]=(ss+4)%1056
    return src_dest_map


def gen_rand_perm_v1():
    src_dest_map={}
    #every node inside a group have different group as destination
    for ss in src:
        gid=int(ss/(a*p))
        nodeid=ss%(a*p)
        dest_gid=(nodeid+gid+1)%g
        dest=dest_gid*32+nodeid
        src_dest_map[ss]=dest
    return src_dest_map

def gen_rand_perm_v2():
    src_dest_map={}     
    for ss in src:
        src_grp=int(ss/(a*p))
        node_index=ss%(a*p)  
        dest_grp=[ele for ele in range(33)]
        dest_grp.remove(src_grp)
        if src_grp!=32:
            src_dest_map[ss]=(dest_grp[node_index]*32) + src_grp
    remaing_nodes=[(ele*32)+ele for ele in range(32)]
    for i in range(32):
        ss=(32*32)+i
        dd=remaing_nodes[i]
        src_dest_map[ss]=dd
        
    return src_dest_map

def gen_rand_perm_v3():
    import random
    src_dest_map={}   
    src=[]
    dest=[]
    for gg in range(33):
        each_grp=[]
        for aa in range(8):
            each_router=[]
            for pp in range(4):
                node= gg*32+aa*4+pp                
                each_router.append(node)
            each_grp.append(each_router)
        src.append(each_grp)
        dest.append(each_grp)
    
    
    for k,v in topo_map.items():        
        src_grp=int(int(k)/8)
        src_router_index=int(k)%8
        src_nodes=src[src_grp][src_router_index]
        
        
        dest_nodes=[]
        for ele in v:
            ele=int(ele)
            dest_grp=int(ele/8)
            dest_router_index=ele%8            
            if int(int(k)/8)!=dest_grp:                
                dest_nodes.append(dest[dest_grp][dest_router_index])                        
        print(src_nodes,dest_nodes)
        
        for i in range(len(src_nodes)):
            ss=src_nodes[i]
            dd=random.choice(dest_nodes[i])
            while(dd in src_dest_map.values()):
                dd=random.choice(dest_nodes[i])
            src_dest_map[ss]=dd       
    return src_dest_map


def gen_rand_perm_v_9():
    import random
    src_dest_map={}   
    src=[]
    dest=[]
    for gg in range(9):
        each_grp=[]
        for aa in range(4):
            each_router=[]
            for pp in range(2):
                node= gg*8+aa*2+pp                
                each_router.append(node)
            each_grp.append(each_router)
        src.append(each_grp)
        dest.append(each_grp)
    
    
    for k,v in topo_map_9.items():        
        src_grp=int(int(k)/4)
        src_router_index=int(k)%4
        src_nodes=src[src_grp][src_router_index]
        
        
        dest_nodes=[]
        for ele in v:
            ele=int(ele)
            dest_grp=int(ele/4)
            dest_router_index=ele%4            
            if int(int(k)/4)!=dest_grp:                
                dest_nodes.append(dest[dest_grp][dest_router_index])                        
        print(src_nodes,dest_nodes)
        
        for i in range(len(src_nodes)):
            ss=src_nodes[i]
            dd=random.choice(dest_nodes[i])
            while(dd in src_dest_map.values()):
                dd=random.choice(dest_nodes[i])
            src_dest_map[ss]=dd       
    return src_dest_map




def gen_rand_perm_v2():
    src_dest_map={}     
    for ss in src:
        src_grp=int(ss/(a*p))
        node_index=ss%(a*p)  
        dest_grp=[ele for ele in range(33)]
        dest_grp.remove(src_grp)
        if src_grp!=32:
            src_dest_map[ss]=(dest_grp[node_index]*32) + src_grp
    remaing_nodes=[(ele*32)+ele for ele in range(32)]
    for i in range(32):
        ss=(32*32)+i
        dd=remaing_nodes[i]
        src_dest_map[ss]=dd
        
    return src_dest_map

def gen_rand_perm_9_v2():
    src_dest_map={}     
    for ss in src:
        src_grp=int(ss/(a*p))
        node_index=ss%(a*p)  
        dest_grp=[ele for ele in range(9)]
        dest_grp.remove(src_grp)
        if src_grp!=8:
            src_dest_map[ss]=(dest_grp[node_index]*8) + src_grp
    remaing_nodes=[(ele*8)+ele for ele in range(8)]
    for i in range(8):
        ss=(8*8)+i
        dd=remaing_nodes[i]
        src_dest_map[ss]=dd
        
    return src_dest_map



def gen_rand_perm():
    import random
    seed=random.randint(0,100)
    random.seed(seed)
    
    random.shuffle(dest)
    src_dest_map={}
    
    for ss in src:
        src_dest_map[ss]=dest[ss]
    return src_dest_map

# src_dest_map=gen_shift()
# src_dest_map=gen_rand_perm_v1()
# src_dest_map=gen_rand_perm()
# src_dest_map=gen_shift_v2()
# src_dest_map=rand_perm_half()
# src_dest_map=gen_rand_perm_v2()
src_dest_map=gen_rand_perm_v3()
for k,v in src_dest_map.items():
    src_dest_min_path[k]=min_path(k,v,topo_map)

# src_keys=sorted(list(src_dest_map.keys()))
# traffic=[]
# for k in src_keys:
#     temp=[0]*1056
#     temp[src_dest_map[k]]=1
#     traffic.append(temp)
# import numpy as np
# traffic=np.array(traffic)
# import matplotlib.pyplot as plt
# plt.imshow(traffic)
#concurrent flows
aaxm={}
for k1,v1 in src_dest_min_path.items():
    for i in range(0,len(v1)-1):
        ck_link=(v1[i],v1[i+1])
        for k2,v2 in src_dest_min_path.items():
            if k1==k2:
                continue
            for j in range(0,len(v2)-1):
                path_link=(v2[j],v2[j+1])
                if ck_link==path_link:
                    if ck_link not in aaxm:
                        aaxm[ck_link]=set()
                        aaxm[ck_link].add((k2,tuple(v2)))
                    else:
                        aaxm[ck_link].add((k2,tuple(v2)))        
link_flows={}
cnt=0
ttm=[[0] for _ in range(3)]
for k,v in aaxm.items():
    for gg in range(33):
        if int(k[0]/8) == int(k[1]/8) ==gg:
            if len(v)==2:
                ttm[0].append((gg,k,len(v)))
            if len(v)==3:
                ttm[1].append((gg,k,len(v)))
            if len(v)==4:
                ttm[2].append((gg,k,len(v)))
            cnt+=1
    link_flows[k]=len(v)
    
import matplotlib.pyplot as plt
import seaborn as sns

names = sorted(list(link_flows.keys()))
values = [link_flows[val] for val in names]

names = [str(ele) for ele in names]


sns.barplot(x=names, y=values)
# plt.bar(range(len(link_flows)), values, tick_label=names)
plt.xticks(rotation=90)
plt.show()
    

#last link concurrent flows
last_link={}
for k1,v1 in src_dest_min_path.items():
        ck_link=(v1[-2],v1[-1])
        for k2,v2 in src_dest_min_path.items():
            if k1==k2:
                continue
            path_link=(v2[-2],v2[-1])
            if ck_link==path_link:
                if ck_link not in last_link:
                    last_link[ck_link]=set()
                last_link[ck_link].add((k2,tuple(v2)))
                
                        
last_link_flows={}
for k,v in last_link.items():
    if int(k[0]/32) != int(k[1]/32):
        print(k)
    last_link_flows[k]=len(v)

import matplotlib.pyplot as plt
import seaborn as sns


names = sorted(list(last_link_flows.keys()))
values = [last_link_flows[val] for val in names]
names = [str(ele) for ele in names]


sns.barplot(x=names, y=values)
# plt.bar(range(len(link_flows)), values, tick_label=names)
plt.xticks(rotation=90)
plt.show()
    
with open('full_rand_perm_best','w') as fp:
    for k,v in src_dest_map.items():
        fp.write(str(k)+" "+str(v)+" 1 0\n")
        

topo_map={'0': ['8', '16', '24', '32', 1, 2, 3, 4, 5, 6, 7],
 '1': ['40', '48', '56', '64', 0, 2, 3, 4, 5, 6, 7],
 '2': ['72', '80', '88', '96', 0, 1, 3, 4, 5, 6, 7],
 '3': ['104', '112', '120', '128', 0, 1, 2, 4, 5, 6, 7],
 '4': ['136', '144', '152', '160', 0, 1, 2, 3, 5, 6, 7],
 '5': ['168', '176', '184', '192', 0, 1, 2, 3, 4, 6, 7],
 '6': ['200', '208', '216', '224', 0, 1, 2, 3, 4, 5, 7],
 '7': ['232', '240', '248', '256', 0, 1, 2, 3, 4, 5, 6],
 '8': ['17', '25', '33', '0', 9, 10, 11, 12, 13, 14, 15],
 '9': ['41', '49', '57', '65', 8, 10, 11, 12, 13, 14, 15],
 '10': ['73', '81', '89', '97', 8, 9, 11, 12, 13, 14, 15],
 '11': ['105', '113', '121', '129', 8, 9, 10, 12, 13, 14, 15],
 '12': ['137', '145', '153', '161', 8, 9, 10, 11, 13, 14, 15],
 '13': ['169', '177', '185', '193', 8, 9, 10, 11, 12, 14, 15],
 '14': ['201', '209', '217', '225', 8, 9, 10, 11, 12, 13, 15],
 '15': ['233', '241', '249', '257', 8, 9, 10, 11, 12, 13, 14],
 '16': ['26', '34', '42', '0', 17, 18, 19, 20, 21, 22, 23],
 '17': ['50', '58', '66', '8', 16, 18, 19, 20, 21, 22, 23],
 '18': ['74', '82', '90', '98', 16, 17, 19, 20, 21, 22, 23],
 '19': ['106', '114', '122', '130', 16, 17, 18, 20, 21, 22, 23],
 '20': ['138', '146', '154', '162', 16, 17, 18, 19, 21, 22, 23],
 '21': ['170', '178', '186', '194', 16, 17, 18, 19, 20, 22, 23],
 '22': ['202', '210', '218', '226', 16, 17, 18, 19, 20, 21, 23],
 '23': ['234', '242', '250', '258', 16, 17, 18, 19, 20, 21, 22],
 '24': ['35', '43', '51', '0', 25, 26, 27, 28, 29, 30, 31],
 '25': ['59', '67', '75', '8', 24, 26, 27, 28, 29, 30, 31],
 '26': ['83', '91', '99', '16', 24, 25, 27, 28, 29, 30, 31],
 '27': ['107', '115', '123', '131', 24, 25, 26, 28, 29, 30, 31],
 '28': ['139', '147', '155', '163', 24, 25, 26, 27, 29, 30, 31],
 '29': ['171', '179', '187', '195', 24, 25, 26, 27, 28, 30, 31],
 '30': ['203', '211', '219', '227', 24, 25, 26, 27, 28, 29, 31],
 '31': ['235', '243', '251', '259', 24, 25, 26, 27, 28, 29, 30],
 '32': ['44', '52', '60', '0', 33, 34, 35, 36, 37, 38, 39],
 '33': ['68', '76', '84', '8', 32, 34, 35, 36, 37, 38, 39],
 '34': ['92', '100', '108', '16', 32, 33, 35, 36, 37, 38, 39],
 '35': ['116', '124', '132', '24', 32, 33, 34, 36, 37, 38, 39],
 '36': ['140', '148', '156', '164', 32, 33, 34, 35, 37, 38, 39],
 '37': ['172', '180', '188', '196', 32, 33, 34, 35, 36, 38, 39],
 '38': ['204', '212', '220', '228', 32, 33, 34, 35, 36, 37, 39],
 '39': ['236', '244', '252', '260', 32, 33, 34, 35, 36, 37, 38],
 '40': ['53', '61', '69', '1', 41, 42, 43, 44, 45, 46, 47],
 '41': ['77', '85', '93', '9', 40, 42, 43, 44, 45, 46, 47],
 '42': ['101', '109', '117', '16', 40, 41, 43, 44, 45, 46, 47],
 '43': ['125', '133', '141', '24', 40, 41, 42, 44, 45, 46, 47],
 '44': ['149', '157', '165', '32', 40, 41, 42, 43, 45, 46, 47],
 '45': ['173', '181', '189', '197', 40, 41, 42, 43, 44, 46, 47],
 '46': ['205', '213', '221', '229', 40, 41, 42, 43, 44, 45, 47],
 '47': ['237', '245', '253', '261', 40, 41, 42, 43, 44, 45, 46],
 '48': ['62', '70', '78', '1', 49, 50, 51, 52, 53, 54, 55],
 '49': ['86', '94', '102', '9', 48, 50, 51, 52, 53, 54, 55],
 '50': ['110', '118', '126', '17', 48, 49, 51, 52, 53, 54, 55],
 '51': ['134', '142', '150', '24', 48, 49, 50, 52, 53, 54, 55],
 '52': ['158', '166', '174', '32', 48, 49, 50, 51, 53, 54, 55],
 '53': ['182', '190', '198', '40', 48, 49, 50, 51, 52, 54, 55],
 '54': ['206', '214', '222', '230', 48, 49, 50, 51, 52, 53, 55],
 '55': ['238', '246', '254', '262', 48, 49, 50, 51, 52, 53, 54],
 '56': ['71', '79', '87', '1', 57, 58, 59, 60, 61, 62, 63],
 '57': ['95', '103', '111', '9', 56, 58, 59, 60, 61, 62, 63],
 '58': ['119', '127', '135', '17', 56, 57, 59, 60, 61, 62, 63],
 '59': ['143', '151', '159', '25', 56, 57, 58, 60, 61, 62, 63],
 '60': ['167', '175', '183', '32', 56, 57, 58, 59, 61, 62, 63],
 '61': ['191', '199', '207', '40', 56, 57, 58, 59, 60, 62, 63],
 '62': ['215', '223', '231', '48', 56, 57, 58, 59, 60, 61, 63],
 '63': ['239', '247', '255', '263', 56, 57, 58, 59, 60, 61, 62],
 '64': ['72', '80', '88', '1', 65, 66, 67, 68, 69, 70, 71],
 '65': ['96', '104', '112', '9', 64, 66, 67, 68, 69, 70, 71],
 '66': ['120', '128', '136', '17', 64, 65, 67, 68, 69, 70, 71],
 '67': ['144', '152', '160', '25', 64, 65, 66, 68, 69, 70, 71],
 '68': ['168', '176', '184', '33', 64, 65, 66, 67, 69, 70, 71],
 '69': ['192', '200', '208', '40', 64, 65, 66, 67, 68, 70, 71],
 '70': ['216', '224', '232', '48', 64, 65, 66, 67, 68, 69, 71],
 '71': ['240', '248', '256', '56', 64, 65, 66, 67, 68, 69, 70],
 '72': ['81', '89', '2', '64', 73, 74, 75, 76, 77, 78, 79],
 '73': ['97', '105', '113', '10', 72, 74, 75, 76, 77, 78, 79],
 '74': ['121', '129', '137', '18', 72, 73, 75, 76, 77, 78, 79],
 '75': ['145', '153', '161', '25', 72, 73, 74, 76, 77, 78, 79],
 '76': ['169', '177', '185', '33', 72, 73, 74, 75, 77, 78, 79],
 '77': ['193', '201', '209', '41', 72, 73, 74, 75, 76, 78, 79],
 '78': ['217', '225', '233', '48', 72, 73, 74, 75, 76, 77, 79],
 '79': ['241', '249', '257', '56', 72, 73, 74, 75, 76, 77, 78],
 '80': ['90', '98', '2', '64', 81, 82, 83, 84, 85, 86, 87],
 '81': ['106', '114', '10', '72', 80, 82, 83, 84, 85, 86, 87],
 '82': ['122', '130', '138', '18', 80, 81, 83, 84, 85, 86, 87],
 '83': ['146', '154', '162', '26', 80, 81, 82, 84, 85, 86, 87],
 '84': ['170', '178', '186', '33', 80, 81, 82, 83, 85, 86, 87],
 '85': ['194', '202', '210', '41', 80, 81, 82, 83, 84, 86, 87],
 '86': ['218', '226', '234', '49', 80, 81, 82, 83, 84, 85, 87],
 '87': ['242', '250', '258', '56', 80, 81, 82, 83, 84, 85, 86],
 '88': ['99', '107', '2', '64', 89, 90, 91, 92, 93, 94, 95],
 '89': ['115', '123', '10', '72', 88, 90, 91, 92, 93, 94, 95],
 '90': ['131', '139', '18', '80', 88, 89, 91, 92, 93, 94, 95],
 '91': ['147', '155', '163', '26', 88, 89, 90, 92, 93, 94, 95],
 '92': ['171', '179', '187', '34', 88, 89, 90, 91, 93, 94, 95],
 '93': ['195', '203', '211', '41', 88, 89, 90, 91, 92, 94, 95],
 '94': ['219', '227', '235', '49', 88, 89, 90, 91, 92, 93, 95],
 '95': ['243', '251', '259', '57', 88, 89, 90, 91, 92, 93, 94],
 '96': ['108', '116', '2', '65', 97, 98, 99, 100, 101, 102, 103],
 '97': ['124', '132', '10', '73', 96, 98, 99, 100, 101, 102, 103],
 '98': ['140', '148', '18', '80', 96, 97, 99, 100, 101, 102, 103],
 '99': ['156', '164', '26', '88', 96, 97, 98, 100, 101, 102, 103],
 '100': ['172', '180', '188', '34', 96, 97, 98, 99, 101, 102, 103],
 '101': ['196', '204', '212', '42', 96, 97, 98, 99, 100, 102, 103],
 '102': ['220', '228', '236', '49', 96, 97, 98, 99, 100, 101, 103],
 '103': ['244', '252', '260', '57', 96, 97, 98, 99, 100, 101, 102],
 '104': ['117', '125', '3', '65', 105, 106, 107, 108, 109, 110, 111],
 '105': ['133', '141', '11', '73', 104, 106, 107, 108, 109, 110, 111],
 '106': ['149', '157', '19', '81', 104, 105, 107, 108, 109, 110, 111],
 '107': ['165', '173', '27', '88', 104, 105, 106, 108, 109, 110, 111],
 '108': ['181', '189', '34', '96', 104, 105, 106, 107, 109, 110, 111],
 '109': ['197', '205', '213', '42', 104, 105, 106, 107, 108, 110, 111],
 '110': ['221', '229', '237', '50', 104, 105, 106, 107, 108, 109, 111],
 '111': ['245', '253', '261', '57', 104, 105, 106, 107, 108, 109, 110],
 '112': ['126', '134', '3', '65', 113, 114, 115, 116, 117, 118, 119],
 '113': ['142', '150', '11', '73', 112, 114, 115, 116, 117, 118, 119],
 '114': ['158', '166', '19', '81', 112, 113, 115, 116, 117, 118, 119],
 '115': ['174', '182', '27', '89', 112, 113, 114, 116, 117, 118, 119],
 '116': ['190', '198', '35', '96', 112, 113, 114, 115, 117, 118, 119],
 '117': ['206', '214', '42', '104', 112, 113, 114, 115, 116, 118, 119],
 '118': ['222', '230', '238', '50', 112, 113, 114, 115, 116, 117, 119],
 '119': ['246', '254', '262', '58', 112, 113, 114, 115, 116, 117, 118],
 '120': ['135', '143', '3', '66', 121, 122, 123, 124, 125, 126, 127],
 '121': ['151', '159', '11', '74', 120, 122, 123, 124, 125, 126, 127],
 '122': ['167', '175', '19', '82', 120, 121, 123, 124, 125, 126, 127],
 '123': ['183', '191', '27', '89', 120, 121, 122, 124, 125, 126, 127],
 '124': ['199', '207', '35', '97', 120, 121, 122, 123, 125, 126, 127],
 '125': ['215', '223', '43', '104', 120, 121, 122, 123, 124, 126, 127],
 '126': ['231', '239', '50', '112', 120, 121, 122, 123, 124, 125, 127],
 '127': ['247', '255', '263', '58', 120, 121, 122, 123, 124, 125, 126],
 '128': ['136', '144', '3', '66', 129, 130, 131, 132, 133, 134, 135],
 '129': ['152', '160', '11', '74', 128, 130, 131, 132, 133, 134, 135],
 '130': ['168', '176', '19', '82', 128, 129, 131, 132, 133, 134, 135],
 '131': ['184', '192', '27', '90', 128, 129, 130, 132, 133, 134, 135],
 '132': ['200', '208', '35', '97', 128, 129, 130, 131, 133, 134, 135],
 '133': ['216', '224', '43', '105', 128, 129, 130, 131, 132, 134, 135],
 '134': ['232', '240', '51', '112', 128, 129, 130, 131, 132, 133, 135],
 '135': ['248', '256', '58', '120', 128, 129, 130, 131, 132, 133, 134],
 '136': ['145', '4', '66', '128', 137, 138, 139, 140, 141, 142, 143],
 '137': ['153', '161', '12', '74', 136, 138, 139, 140, 141, 142, 143],
 '138': ['169', '177', '20', '82', 136, 137, 139, 140, 141, 142, 143],
 '139': ['185', '193', '28', '90', 136, 137, 138, 140, 141, 142, 143],
 '140': ['201', '209', '36', '98', 136, 137, 138, 139, 141, 142, 143],
 '141': ['217', '225', '43', '105', 136, 137, 138, 139, 140, 142, 143],
 '142': ['233', '241', '51', '113', 136, 137, 138, 139, 140, 141, 143],
 '143': ['249', '257', '59', '120', 136, 137, 138, 139, 140, 141, 142],
 '144': ['154', '4', '67', '128', 145, 146, 147, 148, 149, 150, 151],
 '145': ['162', '12', '75', '136', 144, 146, 147, 148, 149, 150, 151],
 '146': ['170', '178', '20', '83', 144, 145, 147, 148, 149, 150, 151],
 '147': ['186', '194', '28', '91', 144, 145, 146, 148, 149, 150, 151],
 '148': ['202', '210', '36', '98', 144, 145, 146, 147, 149, 150, 151],
 '149': ['218', '226', '44', '106', 144, 145, 146, 147, 148, 150, 151],
 '150': ['234', '242', '51', '113', 144, 145, 146, 147, 148, 149, 151],
 '151': ['250', '258', '59', '121', 144, 145, 146, 147, 148, 149, 150],
 '152': ['163', '4', '67', '129', 153, 154, 155, 156, 157, 158, 159],
 '153': ['171', '12', '75', '137', 152, 154, 155, 156, 157, 158, 159],
 '154': ['179', '20', '83', '144', 152, 153, 155, 156, 157, 158, 159],
 '155': ['187', '195', '28', '91', 152, 153, 154, 156, 157, 158, 159],
 '156': ['203', '211', '36', '99', 152, 153, 154, 155, 157, 158, 159],
 '157': ['219', '227', '44', '106', 152, 153, 154, 155, 156, 158, 159],
 '158': ['235', '243', '52', '114', 152, 153, 154, 155, 156, 157, 159],
 '159': ['251', '259', '59', '121', 152, 153, 154, 155, 156, 157, 158],
 '160': ['172', '4', '67', '129', 161, 162, 163, 164, 165, 166, 167],
 '161': ['180', '12', '75', '137', 160, 162, 163, 164, 165, 166, 167],
 '162': ['188', '20', '83', '145', 160, 161, 163, 164, 165, 166, 167],
 '163': ['196', '28', '91', '152', 160, 161, 162, 164, 165, 166, 167],
 '164': ['204', '212', '36', '99', 160, 161, 162, 163, 165, 166, 167],
 '165': ['220', '228', '44', '107', 160, 161, 162, 163, 164, 166, 167],
 '166': ['236', '244', '52', '114', 160, 161, 162, 163, 164, 165, 167],
 '167': ['252', '260', '60', '122', 160, 161, 162, 163, 164, 165, 166],
 '168': ['181', '5', '68', '130', 169, 170, 171, 172, 173, 174, 175],
 '169': ['189', '13', '76', '138', 168, 170, 171, 172, 173, 174, 175],
 '170': ['197', '21', '84', '146', 168, 169, 171, 172, 173, 174, 175],
 '171': ['205', '29', '92', '153', 168, 169, 170, 172, 173, 174, 175],
 '172': ['213', '37', '100', '160', 168, 169, 170, 171, 173, 174, 175],
 '173': ['221', '229', '45', '107', 168, 169, 170, 171, 172, 174, 175],
 '174': ['237', '245', '52', '115', 168, 169, 170, 171, 172, 173, 175],
 '175': ['253', '261', '60', '122', 168, 169, 170, 171, 172, 173, 174],
 '176': ['190', '5', '68', '130', 177, 178, 179, 180, 181, 182, 183],
 '177': ['198', '13', '76', '138', 176, 178, 179, 180, 181, 182, 183],
 '178': ['206', '21', '84', '146', 176, 177, 179, 180, 181, 182, 183],
 '179': ['214', '29', '92', '154', 176, 177, 178, 180, 181, 182, 183],
 '180': ['222', '37', '100', '161', 176, 177, 178, 179, 181, 182, 183],
 '181': ['230', '45', '108', '168', 176, 177, 178, 179, 180, 182, 183],
 '182': ['238', '246', '53', '115', 176, 177, 178, 179, 180, 181, 183],
 '183': ['254', '262', '60', '123', 176, 177, 178, 179, 180, 181, 182],
 '184': ['199', '5', '68', '131', 185, 186, 187, 188, 189, 190, 191],
 '185': ['207', '13', '76', '139', 184, 186, 187, 188, 189, 190, 191],
 '186': ['215', '21', '84', '147', 184, 185, 187, 188, 189, 190, 191],
 '187': ['223', '29', '92', '155', 184, 185, 186, 188, 189, 190, 191],
 '188': ['231', '37', '100', '162', 184, 185, 186, 187, 189, 190, 191],
 '189': ['239', '45', '108', '169', 184, 185, 186, 187, 188, 190, 191],
 '190': ['247', '53', '116', '176', 184, 185, 186, 187, 188, 189, 191],
 '191': ['255', '263', '61', '123', 184, 185, 186, 187, 188, 189, 190],
 '192': ['200', '5', '69', '131', 193, 194, 195, 196, 197, 198, 199],
 '193': ['208', '13', '77', '139', 192, 194, 195, 196, 197, 198, 199],
 '194': ['216', '21', '85', '147', 192, 193, 195, 196, 197, 198, 199],
 '195': ['224', '29', '93', '155', 192, 193, 194, 196, 197, 198, 199],
 '196': ['232', '37', '101', '163', 192, 193, 194, 195, 197, 198, 199],
 '197': ['240', '45', '109', '170', 192, 193, 194, 195, 196, 198, 199],
 '198': ['248', '53', '116', '177', 192, 193, 194, 195, 196, 197, 199],
 '199': ['256', '61', '124', '184', 192, 193, 194, 195, 196, 197, 198],
 '200': ['6', '69', '132', '192', 201, 202, 203, 204, 205, 206, 207],
 '201': ['209', '14', '77', '140', 200, 202, 203, 204, 205, 206, 207],
 '202': ['217', '22', '85', '148', 200, 201, 203, 204, 205, 206, 207],
 '203': ['225', '30', '93', '156', 200, 201, 202, 204, 205, 206, 207],
 '204': ['233', '38', '101', '164', 200, 201, 202, 203, 205, 206, 207],
 '205': ['241', '46', '109', '171', 200, 201, 202, 203, 204, 206, 207],
 '206': ['249', '54', '117', '178', 200, 201, 202, 203, 204, 205, 207],
 '207': ['257', '61', '124', '185', 200, 201, 202, 203, 204, 205, 206],
 '208': ['6', '69', '132', '193', 209, 210, 211, 212, 213, 214, 215],
 '209': ['14', '77', '140', '201', 208, 210, 211, 212, 213, 214, 215],
 '210': ['218', '22', '85', '148', 208, 209, 211, 212, 213, 214, 215],
 '211': ['226', '30', '93', '156', 208, 209, 210, 212, 213, 214, 215],
 '212': ['234', '38', '101', '164', 208, 209, 210, 211, 213, 214, 215],
 '213': ['242', '46', '109', '172', 208, 209, 210, 211, 212, 214, 215],
 '214': ['250', '54', '117', '179', 208, 209, 210, 211, 212, 213, 215],
 '215': ['258', '62', '125', '186', 208, 209, 210, 211, 212, 213, 214],
 '216': ['6', '70', '133', '194', 217, 218, 219, 220, 221, 222, 223],
 '217': ['14', '78', '141', '202', 216, 218, 219, 220, 221, 222, 223],
 '218': ['22', '86', '149', '210', 216, 217, 219, 220, 221, 222, 223],
 '219': ['227', '30', '94', '157', 216, 217, 218, 220, 221, 222, 223],
 '220': ['235', '38', '102', '165', 216, 217, 218, 219, 221, 222, 223],
 '221': ['243', '46', '110', '173', 216, 217, 218, 219, 220, 222, 223],
 '222': ['251', '54', '118', '180', 216, 217, 218, 219, 220, 221, 223],
 '223': ['259', '62', '125', '187', 216, 217, 218, 219, 220, 221, 222],
 '224': ['6', '70', '133', '195', 225, 226, 227, 228, 229, 230, 231],
 '225': ['14', '78', '141', '203', 224, 226, 227, 228, 229, 230, 231],
 '226': ['22', '86', '149', '211', 224, 225, 227, 228, 229, 230, 231],
 '227': ['30', '94', '157', '219', 224, 225, 226, 228, 229, 230, 231],
 '228': ['236', '38', '102', '165', 224, 225, 226, 227, 229, 230, 231],
 '229': ['244', '46', '110', '173', 224, 225, 226, 227, 228, 230, 231],
 '230': ['252', '54', '118', '181', 224, 225, 226, 227, 228, 229, 231],
 '231': ['260', '62', '126', '188', 224, 225, 226, 227, 228, 229, 230],
 '232': ['7', '70', '134', '196', 233, 234, 235, 236, 237, 238, 239],
 '233': ['15', '78', '142', '204', 232, 234, 235, 236, 237, 238, 239],
 '234': ['23', '86', '150', '212', 232, 233, 235, 236, 237, 238, 239],
 '235': ['31', '94', '158', '220', 232, 233, 234, 236, 237, 238, 239],
 '236': ['39', '102', '166', '228', 232, 233, 234, 235, 237, 238, 239],
 '237': ['245', '47', '110', '174', 232, 233, 234, 235, 236, 238, 239],
 '238': ['253', '55', '118', '182', 232, 233, 234, 235, 236, 237, 239],
 '239': ['261', '63', '126', '189', 232, 233, 234, 235, 236, 237, 238],
 '240': ['7', '71', '134', '197', 241, 242, 243, 244, 245, 246, 247],
 '241': ['15', '79', '142', '205', 240, 242, 243, 244, 245, 246, 247],
 '242': ['23', '87', '150', '213', 240, 241, 243, 244, 245, 246, 247],
 '243': ['31', '95', '158', '221', 240, 241, 242, 244, 245, 246, 247],
 '244': ['39', '103', '166', '229', 240, 241, 242, 243, 245, 246, 247],
 '245': ['47', '111', '174', '237', 240, 241, 242, 243, 244, 246, 247],
 '246': ['254', '55', '119', '182', 240, 241, 242, 243, 244, 245, 247],
 '247': ['262', '63', '127', '190', 240, 241, 242, 243, 244, 245, 246],
 '248': ['7', '71', '135', '198', 249, 250, 251, 252, 253, 254, 255],
 '249': ['15', '79', '143', '206', 248, 250, 251, 252, 253, 254, 255],
 '250': ['23', '87', '151', '214', 248, 249, 251, 252, 253, 254, 255],
 '251': ['31', '95', '159', '222', 248, 249, 250, 252, 253, 254, 255],
 '252': ['39', '103', '167', '230', 248, 249, 250, 251, 253, 254, 255],
 '253': ['47', '111', '175', '238', 248, 249, 250, 251, 252, 254, 255],
 '254': ['55', '119', '183', '246', 248, 249, 250, 251, 252, 253, 255],
 '255': ['263', '63', '127', '191', 248, 249, 250, 251, 252, 253, 254],
 '256': ['7', '71', '135', '199', 257, 258, 259, 260, 261, 262, 263],
 '257': ['15', '79', '143', '207', 256, 258, 259, 260, 261, 262, 263],
 '258': ['23', '87', '151', '215', 256, 257, 259, 260, 261, 262, 263],
 '259': ['31', '95', '159', '223', 256, 257, 258, 260, 261, 262, 263],
 '260': ['39', '103', '167', '231', 256, 257, 258, 259, 261, 262, 263],
 '261': ['47', '111', '175', '239', 256, 257, 258, 259, 260, 262, 263],
 '262': ['55', '119', '183', '247', 256, 257, 258, 259, 260, 261, 263],
 '263': ['63', '127', '191', '255', 256, 257, 258, 259, 260, 261, 262]}