def read_traffic_file():
    srd_dest_map={}
    with open('traffic/rand_perm_no_intra') as fp:
        aa=fp.readlines()
        aa=[ele.strip() for ele in aa]
    for ele in aa:
        ele=ele.split(" ")
        srd_dest_map[int(ele[0])]=int(ele[1])
    return srd_dest_map

src_dest_map=read_traffic_file()

def create_shift_traffic():
    import random
    src_dest_map={}
    dest_list=set()
    for i in range(288):
        dest=(i+160)%288
        print(i,dest,0,0)
        src_dest_map[i]=dest
        
    
    
def create_rand_perm_traffic():
    import random
    src_dest_map={}
    dest_list=set()
    for i in range(288):
        dest=random.randrange(288)
        while((int(dest/32) == int(i/32)) or (dest in src_dest_map.values())):
            # random.seed(random.choice(list(src_dest_map.values())))
            dest=random.randrange(288)    
        print(i,dest,0,0)
        src_dest_map[i]=dest
    
def grp_grp_flows():    
    flow_map={}
    src_dest_router_map=[]
    for k,v in src_dest_map.items():
        dest=v
        rg_pair=(int(k/32),int(dest/32))
        src_dest_router_map.append((int(k/4),int(dest/4)))
        if rg_pair in flow_map:
            flow_map[rg_pair] +=1
        else:
            flow_map[rg_pair] =1
    
    flow_map= dict(sorted(flow_map.items(),key=lambda item: item[1]))

def test_flow(flow_map):
    values_map={}
    for k,v in flow_map.items():
        if k[1] in values_map:
            values_map[k[1]]+=v
        else:
            values_map[k[1]]=v
            