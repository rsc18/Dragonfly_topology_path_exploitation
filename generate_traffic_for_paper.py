import random

a,g,p = 26,27,13
def get_mixed_traffic(traffic_name,percent):
    src=[]
    dest=[]    
    
    if traffic_name=="rbmixed":
        routers = [ele for ele in range(a*g)]
        random.shuffle(routers)
        src_routers = random.sample(routers,int(percent*len(routers)/100))
        for sw in range(a*g):
            for nd in range(p):
                src.append(sw*p+nd)
                if sw in src_routers:                    
                    dest.append(((sw*p+nd) + a*p) % (a*g*p))
                else:
                    dest.append(-1)
        if percent!=100:
            assert(len(set(dest))== int((a*g)*percent/100)*p +1)
            
    if traffic_name=="permmixed":
        num_nodes = a*g*p
        src=[i for i in range(num_nodes)]
        dest=[i for i in range(num_nodes)]
        random.shuffle(dest)
        random.shuffle(src)
        nodes_perm=int((num_nodes*percent)/100)
        for i in range(nodes_perm,num_nodes):
            dest[i]=-1
        if percent!=100:
            assert(len(set(dest))== int((a*g*p)*percent/100) +1)
        
    if traffic_name=="pemixed":
        num_nodes = a*g*p
        src_nodes=[i for i in range(num_nodes)]
        src_nodes = random.sample(src_nodes,int(percent*num_nodes/100))
        for i in range(a*g*p):
            src.append(i)
            if i in src_nodes:
    	        dest.append((i + a*p) % (a*g*p))
            else:
                dest.append(-1)
        if percent!=100:
            assert(len(set(dest))== int((a*g*p)*percent/100) +1)
            
    sd_pair= [(x,y) for x,y in zip(src,dest)]
    sd_pair = sorted(sd_pair)
    assert(len(set(src))==a*g*p)
    
    trf=''
    for x,y in sd_pair:
        trf+=str(x)+" "+str(y)+"\n"
    return trf
    
for ele in [0,25,50,75,100]:
    with open(f'traffic/{g}G_perm_patterns/rbmixed-{ele}','w') as fp:
        fp.write(get_mixed_traffic('rbmixed',ele))
for ele in [0,25,50,75,100]:
    with open(f'traffic/{g}G_perm_patterns/pemixed-{ele}','w') as fp:
        fp.write(get_mixed_traffic('pemixed',ele))
for ele in [0,25,50,75,100]:
    with open(f'traffic/{g}G_perm_patterns/permmixed-{ele}','w') as fp:
        fp.write(get_mixed_traffic('permmixed',ele))
